<html>
<head>
    <script type="text/javascript" src="scripts/common-0.0.1.js"></script>
</head>
<body>
  <h3>Windows Patch Management</h3>
  <button onclick="runUpdate()">Run Windows Update</button>
  <pre id="output"></pre>

  <script>
    function runUpdate() {
    if (parent && parent.showtab) { try { parent.showtab('pluginWinPatch'); } catch (e) {} }
    try { QH('output', 'Running...'); } catch(e) {}
    parent.meshserver.send({
        action: "plugin",
        plugin: "winpatch",
        pluginaction: "runUpdate",
        nodeId: parent.currentNode._id
    });

    // Poll fallback: fetch latest result for this node until received
    try {
      var tries = 0;
      var maxTries = 15; // ~30s at 2s interval
      var timer = setInterval(function(){
        tries++;
        fetch('/pluginadmin.ashx?pin=winpatch&user=1&latest=1&node=' + encodeURIComponent(parent.currentNode._id))
        .then(function(r){ return r.json(); })
        .then(function(j){ if (j && (typeof j.output !== 'undefined' && j.output !== null)) { QH('output', String(j.output)); clearInterval(timer); } })
        .catch(function(_){});
        if (tries >= maxTries) { clearInterval(timer); }
      }, 2000);
    } catch(_){}
    }

    parent.pluginHandler.winpatch = parent.pluginHandler.winpatch || {};
    parent.pluginHandler.winpatch.updateResult = function(msg) {
      try { console.log('winpatch UI updateResult:', msg); } catch (e) {}
      var hasOut = (msg && (typeof msg.output !== 'undefined' && msg.output !== null));
      QH('output', hasOut ? String(msg.output) : "No output returned");
    };

    // Generic catch-all to observe any plugin messages reaching the iframe
    if (!parent.pluginHandler.winpatchAny) {
      parent.pluginHandler.winpatchAny = function(msg) {
        try { console.log('winpatch UI any:', msg); } catch (e) {}
        if (msg && msg.plugin === 'winpatch') {
          var hasOut = (typeof msg.output !== 'undefined' && msg.output !== null);
          QH('output', hasOut ? String(msg.output) : JSON.stringify(msg));
        }
      };
    }

  </script>
</body>
</html>



